# ml_evaluate_loop.py ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –º–æ–¥–µ–ª–∏
# ------------------------------------------------------------
# –ö–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç predicted_alarm —Å vibration_alarm,
# –≤—ã—á–∏—Å–ª—è–µ—Ç –º–µ—Ç—Ä–∏–∫–∏ –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –∏—Ö –≤ —Ç–∞–±–ª–∏—Ü—É model_metrics.

import psycopg2
import pandas as pd
from sklearn.metrics import precision_score, recall_score, f1_score
from datetime import datetime
from time import sleep

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è PostgreSQL ---
db_config = {
    "dbname": "postgres",
    "user": "postgres",
    "password": "postgres",
    "host": "localhost",
    "port": 5432
}

# --- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ ---
conn = psycopg2.connect(**db_config)
conn.autocommit = True
cur = conn.cursor()

# --- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –º–µ—Ç—Ä–∏–∫ (–µ—Å–ª–∏ –Ω–µ—Ç) ---
cur.execute("""
    CREATE TABLE IF NOT EXISTS public.model_metrics (
        ts TIMESTAMPTZ NOT NULL,
        precision DOUBLE PRECISION,
        recall DOUBLE PRECISION,
        f1 DOUBLE PRECISION
    )
""")

print("üîÅ –ó–∞–ø—É—Å–∫ —Ü–∏–∫–ª–∞ –æ—Ü–µ–Ω–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –º–æ–¥–µ–ª–∏...")

try:
    while True:
        # --- –ß—Ç–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 200 –ø—Ä–æ–≥–Ω–æ–∑–æ–≤ ---
        df = pd.read_sql("""
            SELECT p.ts, p.predicted_alarm, s.vibration_alarm
            FROM sensor_predictions p
            JOIN sensor_data2 s ON p.ts = s.ts
            ORDER BY p.ts DESC
            LIMIT 200
        """, conn)

        if df.empty:
            print("‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ü–µ–Ω–∫–∏")
            sleep(300)
            continue

        # --- –ú–µ—Ç—Ä–∏–∫–∏ ---
        y_true = df["vibration_alarm"].astype(int)
        y_pred = df["predicted_alarm"].astype(int)

        precision = precision_score(y_true, y_pred, zero_division=0)
        recall = recall_score(y_true, y_pred, zero_division=0)
        f1 = f1_score(y_true, y_pred, zero_division=0)
        ts = datetime.now()

        print(f"[{ts}] Precision: {precision:.3f}  Recall: {recall:.3f}  F1: {f1:.3f}")

        # --- –ó–∞–ø–∏—Å—å –º–µ—Ç—Ä–∏–∫ ---
        cur.execute("""
            INSERT INTO public.model_metrics (ts, precision, recall, f1)
            VALUES (%s, %s, %s, %s)
        """, (ts, precision, recall, f1))

        sleep(300)  # 5 –º–∏–Ω—É—Ç

except KeyboardInterrupt:
    print("‚èπ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")

finally:
    cur.close()
    conn.close()
    print("üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ")
